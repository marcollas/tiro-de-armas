#!/usr/bin/env python3
"""
Script para verificar se todas as depend√™ncias est√£o instaladas corretamente
"""

import sys
import importlib
import subprocess


def check_python_version():
    """Verifica a vers√£o do Python"""
    version = sys.version_info
    print(f"Python {version.major}.{version.minor}.{version.micro}")

    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("‚ùå Python 3.8+ √© necess√°rio")
        return False
    else:
        print("‚úÖ Vers√£o do Python OK")
        return True


def check_dependencies():
    """Verifica se todas as depend√™ncias est√£o instaladas"""
    dependencies = ["numpy", "librosa", "scipy", "sklearn", "matplotlib", "soundfile"]

    missing = []

    for dep in dependencies:
        try:
            importlib.import_module(dep)
            print(f"‚úÖ {dep}")
        except ImportError:
            print(f"‚ùå {dep} - n√£o instalado")
            missing.append(dep)

    return missing


def main():
    print("üîç Verificando configura√ß√£o do backend Python...\n")

    # Verificar vers√£o do Python
    python_ok = check_python_version()
    print()

    # Verificar depend√™ncias
    print("üì¶ Verificando depend√™ncias:")
    missing = check_dependencies()
    print()

    if not python_ok:
        print("‚ùå Atualize o Python para vers√£o 3.8+")
        return 1

    if missing:
        print("‚ùå Depend√™ncias faltando. Instale com:")
        print(f"pip install {' '.join(missing)}")
        return 1

    print("‚úÖ Todas as verifica√ß√µes passaram!")
    print("üöÄ O backend Python est√° pronto para uso!")
    return 0


if __name__ == "__main__":
    sys.exit(main())
